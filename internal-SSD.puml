@startuml internal-ssd
label l [

{{
title Input

actor user
participant InputHandler
participant Sentence
participant Validator

loop Inserimento fino a input valido
    user -> InputHandler: inputSentence()
    InputHandler -> Sentence : setPhrase(input)
    Sentence -> Validator: verifySentence(sentence)
    Validator --> Sentence: boolean
    Sentence --> InputHandler : returnValidation
    alt input non valido
        InputHandler -> user: showInputError()
    end
end

InputHandler --> user: mostra frase
}}

/' da rivedere '/
{{
title Analysis

actor user
participant Sentence
participant Validator
participant Analyzer
participant ApiCaller
participant GoogleAPI

loop Processo di analisi
    user -> Sentence: InputProcess
    Sentence -> Analyzer : analyzeSentence(sentence)
    Analyzer -> ApiCaller: callanalyzeSyntax(input)
    GoogleAPI --> ApiCaller: syntacticTree
    ApiCaller --> Analyzer: syntacticTree
    Analyzer -> Validator: validateSentence(syntacticTree)
    Validator --> Analyzer: boolean

    alt Frase non valida
        Analyzer -> user: showValidationError
    end
end

opt Mostra struttura sintattica
    user -> Analyzer: showSyntacticTree
    Analyzer -> ApiCaller: getTree(syntacticTree)
    ApiCaller --> user: syntacticStructure
end
}}


{{
title TemplateGeneration

actor user
participant WordPicker
participant TemplateController
participant TemplateGenerator
participant Template

TemplateController -> TemplateGenerator: generateTemplate()
TemplateGenerator -> Template : create()
TemplateGenerator --> TemplateController: template
TemplateController -> WordPicker : handleTemplate(template)

}}


{{
title WordsExtraction

actor user
participant WordPicker
participant Dictionary
participant Sentence

WordPicker -> WordPicker : countWordsTemplate()
WordPicker -> Dictionary : pickWords(nounce, verbs, adjectives)
WordPicker <-- Dictionary : wordsDictionary[]
WordPicker -> Sentence : pickWords(nounce, verbs, adjectives)
WordPicker <-- Sentence : wordsSentence[] 
WordPicker -> WordPicker : handleWords(nounce, verbs, adjectives)
}}


{{
title SentenceGeneration

actor user
participant SentenceGenerator
participant WordPicker
participant TemplateController

SentenceGenerator <- WordPicker : giveWords(words[])
SentenceGenerator -> TemplateController : getTemplate()
TemplateController --> SentenceGenerator : template
SentenceGenerator -> SentenceGenerator : fillTemplate()
}}


{{
title ToxicityEvaluation

actor user
participant InputHandler
participant SentenceGenerator
participant ApiCaller
participant GoogleAPI
loop
    SentenceGenerator -> ApiCaller : verifyToxicitysentence(sentence) 
    ApiCaller -> GoogleAPI : moderateText()
    ApiCaller --> SentenceGenerator : result
end

SentenceGenerator -> InputHandler : displayEvaluation()
InputHandler --> user: toxicity evaluation

}}


{{
title DisplaySentence

actor user
participant InputHandler
participant SentenceGenerator

SentenceGenerator -> InputHandler : showGeneratedSentence(sentence)
InputHandler --> user: sentence

}}
]
@enduml